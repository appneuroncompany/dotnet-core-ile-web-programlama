- Klasör yapısı > Notu tamamla
- Tag helperslar
    - asp-items ve ListItem nesnesi (Yer işaretlerine bakılacak.)
- Ajax ile validation konrolü burda da var m?? 
- Startup.cs içindeki metotların ayrıntılı anlamları
- Giriş kısmındaki kullanılabilir paket yöneticileri notu tamamlanacak.
- asp.net kısmına ado.net ile ilgili notlar eklenecek.

- Migration işlemlerinin otomatik hale getirilmesi
    - Program içinde otomatik olarak migration ve update database nasıl yapılır? 
    - Tüm migration kodlarına bakılıp notlara eklenecek

- Settings dosyalarının yapılandırılması
    - https://www.c-sharpcorner.com/article/all-about-appsettings-json-in-asp-net-core-2-0/
    - DB bağlantı stringinin appsettings içinden çekilmesi ve notlara eklenmesi

- BundleConfig ayarlamalarının yapılması (db önceki notlar)

* Validation ifadeleri aynı - Kontrol et

- Db örnek verileri eklemek için yazılan seed metodu eklenecek

- Root dizini alma yöntemleri. wwwroot dizininin nasıl alınacağı? Bu dizinin publish edildiğinde root files olarak bulunup bulunmadığı

- EF Core dökümanı ayrıntılı okunacak.
    - https://docs.microsoft.com/en-us/ef/#pivot=efcore&panel=efcore-all

- Formlar ile ilgili bir not oluşturulacak.
    - Form elemanları
        - Form elemanlarının ayrı ayrı olarak kullnaılması ile ilgili CEO çıkarımları
        - Bunla ilgili bir medium yazısı vardı. 
    - Formlar üzerinden dosya gönderim örnekleri
    - Tag helperlar dahil edilebilir.
    - Formların post ve get ile gönderimleri
    - Form bilgilerinin arka planda çekilmesi   
        - Bunlardan model binding ve normal yöntem arasıdaki fark.

- Custom Route tanımlanması notlarda eksik!

- Bu web sitesi incelenecek:
    - https://www.tektutorialshub.com/asp-net-core-tutorial/

- Custom Input validation tanımlama


// GENEL
- Design patterns ( % Strategy Pattern )
- Class yapısındaki base yapısı
- Derinlemesine C# ile ilgil araştırma yapılacak. 